<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="298" onload="init(evt)" viewBox="0 0 1200 298" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="298" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python test.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="287.00"> </text><svg id="frames" x="10" width="1180" total_samples="84228"><g><title>refresh (tqdm/std.py:1344) (91 samples, 0.11%)</title><rect x="0.1033%" y="132" width="0.1080%" height="15" fill="rgb(227,0,7)" fg:x="87" fg:w="91"/><text x="0.3533%" y="142.50"></text></g><g><title>display (tqdm/std.py:1492) (88 samples, 0.10%)</title><rect x="0.1069%" y="148" width="0.1045%" height="15" fill="rgb(217,0,24)" fg:x="90" fg:w="88"/><text x="0.3569%" y="158.50"></text></g><g><title>update (tqdm/std.py:1239) (103 samples, 0.12%)</title><rect x="0.0938%" y="116" width="0.1223%" height="15" fill="rgb(221,193,54)" fg:x="79" fg:w="103"/><text x="0.3438%" y="126.50"></text></g><g><title>main (test.py:34) (172 samples, 0.20%)</title><rect x="0.0178%" y="84" width="0.2042%" height="15" fill="rgb(248,212,6)" fg:x="15" fg:w="172"/><text x="0.2678%" y="94.50"></text></g><g><title>__iter__ (tqdm/std.py:1188) (113 samples, 0.13%)</title><rect x="0.0879%" y="100" width="0.1342%" height="15" fill="rgb(208,68,35)" fg:x="74" fg:w="113"/><text x="0.3379%" y="110.50"></text></g><g><title>main (test.py:35) (584 samples, 0.69%)</title><rect x="0.2220%" y="84" width="0.6934%" height="15" fill="rgb(232,128,0)" fg:x="187" fg:w="584"/><text x="0.4720%" y="94.50"></text></g><g><title>sample (gymnasium/spaces/discrete.py:92) (455 samples, 0.54%)</title><rect x="0.3752%" y="100" width="0.5402%" height="15" fill="rgb(207,160,47)" fg:x="316" fg:w="455"/><text x="0.6252%" y="110.50"></text></g><g><title>front_pos (MA_minigrid/MA_core/objects.py:177) (229 samples, 0.27%)</title><rect x="1.5838%" y="148" width="0.2719%" height="15" fill="rgb(228,23,34)" fg:x="1334" fg:w="229"/><text x="1.8338%" y="158.50"></text></g><g><title>step (MA_minigrid/envs/Danger_agent.py:86) (662 samples, 0.79%)</title><rect x="1.1968%" y="132" width="0.7860%" height="15" fill="rgb(218,30,26)" fg:x="1008" fg:w="662"/><text x="1.4468%" y="142.50"></text></g><g><title>choices (random.py:540) (106 samples, 0.13%)</title><rect x="2.2855%" y="148" width="0.1258%" height="15" fill="rgb(220,122,19)" fg:x="1925" fg:w="106"/><text x="2.5355%" y="158.50"></text></g><g><title>step (MA_minigrid/envs/Danger_agent.py:88) (374 samples, 0.44%)</title><rect x="1.9886%" y="132" width="0.4440%" height="15" fill="rgb(250,228,42)" fg:x="1675" fg:w="374"/><text x="2.2386%" y="142.50"></text></g><g><title>step (MA_minigrid/envs/Danger_agent.py:90) (124 samples, 0.15%)</title><rect x="2.4327%" y="132" width="0.1472%" height="15" fill="rgb(240,193,28)" fg:x="2049" fg:w="124"/><text x="2.6827%" y="142.50"></text></g><g><title>step (MA_minigrid/envs/MAbabyai/core/MAroomgrid_level.py:101) (465 samples, 0.55%)</title><rect x="2.6963%" y="148" width="0.5521%" height="15" fill="rgb(216,20,37)" fg:x="2271" fg:w="465"/><text x="2.9463%" y="158.50"></text></g><g><title>step (MA_minigrid/envs/MAbabyai/core/MAroomgrid_level.py:107) (86 samples, 0.10%)</title><rect x="3.3207%" y="148" width="0.1021%" height="15" fill="rgb(206,188,39)" fg:x="2797" fg:w="86"/><text x="3.5707%" y="158.50"></text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:451) (407 samples, 0.48%)</title><rect x="3.6199%" y="164" width="0.4832%" height="15" fill="rgb(217,207,13)" fg:x="3049" fg:w="407"/><text x="3.8699%" y="174.50"></text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:459) (186 samples, 0.22%)</title><rect x="4.2599%" y="164" width="0.2208%" height="15" fill="rgb(231,73,38)" fg:x="3588" fg:w="186"/><text x="4.5099%" y="174.50"></text></g><g><title>front_pos (MA_minigrid/MA_core/objects.py:177) (151 samples, 0.18%)</title><rect x="4.3014%" y="180" width="0.1793%" height="15" fill="rgb(225,20,46)" fg:x="3623" fg:w="151"/><text x="4.5514%" y="190.50"></text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:462) (242 samples, 0.29%)</title><rect x="4.4807%" y="164" width="0.2873%" height="15" fill="rgb(210,31,41)" fg:x="3774" fg:w="242"/><text x="4.7307%" y="174.50"></text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:463) (194 samples, 0.23%)</title><rect x="4.7680%" y="164" width="0.2303%" height="15" fill="rgb(221,200,47)" fg:x="4016" fg:w="194"/><text x="5.0180%" y="174.50"></text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:478) (103 samples, 0.12%)</title><rect x="5.1705%" y="164" width="0.1223%" height="15" fill="rgb(226,26,5)" fg:x="4355" fg:w="103"/><text x="5.4205%" y="174.50"></text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:508) (283 samples, 0.34%)</title><rect x="5.4602%" y="164" width="0.3360%" height="15" fill="rgb(249,33,26)" fg:x="4599" fg:w="283"/><text x="5.7102%" y="174.50"></text></g><g><title>gen_obs_grid (MA_minigrid/MA_core/MAminigrid.py:533) (271 samples, 0.32%)</title><rect x="6.0301%" y="196" width="0.3217%" height="15" fill="rgb(235,183,28)" fg:x="5079" fg:w="271"/><text x="6.2801%" y="206.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:170) (258 samples, 0.31%)</title><rect x="6.4254%" y="212" width="0.3063%" height="15" fill="rgb(221,5,38)" fg:x="5412" fg:w="258"/><text x="6.6754%" y="222.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:173) (368 samples, 0.44%)</title><rect x="6.8030%" y="212" width="0.4369%" height="15" fill="rgb(247,18,42)" fg:x="5730" fg:w="368"/><text x="7.0530%" y="222.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:174) (723 samples, 0.86%)</title><rect x="7.2399%" y="212" width="0.8584%" height="15" fill="rgb(241,131,45)" fg:x="6098" fg:w="723"/><text x="7.4899%" y="222.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:175) (561 samples, 0.67%)</title><rect x="8.0983%" y="212" width="0.6660%" height="15" fill="rgb(249,31,29)" fg:x="6821" fg:w="561"/><text x="8.3483%" y="222.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:177) (1,008 samples, 1.20%)</title><rect x="8.7643%" y="212" width="1.1968%" height="15" fill="rgb(225,111,53)" fg:x="7382" fg:w="1008"/><text x="9.0143%" y="222.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:178) (531 samples, 0.63%)</title><rect x="9.9611%" y="212" width="0.6304%" height="15" fill="rgb(238,160,17)" fg:x="8390" fg:w="531"/><text x="10.2111%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:75) (419 samples, 0.50%)</title><rect x="10.9999%" y="228" width="0.4975%" height="15" fill="rgb(214,148,48)" fg:x="9265" fg:w="419"/><text x="11.2499%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:76) (450 samples, 0.53%)</title><rect x="11.4974%" y="228" width="0.5343%" height="15" fill="rgb(232,36,49)" fg:x="9684" fg:w="450"/><text x="11.7474%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:77) (146 samples, 0.17%)</title><rect x="12.0316%" y="228" width="0.1733%" height="15" fill="rgb(209,103,24)" fg:x="10134" fg:w="146"/><text x="12.2816%" y="238.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:179) (1,925 samples, 2.29%)</title><rect x="10.5915%" y="212" width="2.2855%" height="15" fill="rgb(229,88,8)" fg:x="8921" fg:w="1925"/><text x="10.8415%" y="222.50">s..</text></g><g><title>get (minigrid/core/grid.py:78) (566 samples, 0.67%)</title><rect x="12.2050%" y="228" width="0.6720%" height="15" fill="rgb(213,181,19)" fg:x="10280" fg:w="566"/><text x="12.4550%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:44) (367 samples, 0.44%)</title><rect x="13.2771%" y="228" width="0.4357%" height="15" fill="rgb(254,191,54)" fg:x="11183" fg:w="367"/><text x="13.5271%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:47) (403 samples, 0.48%)</title><rect x="13.7128%" y="228" width="0.4785%" height="15" fill="rgb(241,83,37)" fg:x="11550" fg:w="403"/><text x="13.9628%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:49) (129 samples, 0.15%)</title><rect x="14.1912%" y="228" width="0.1532%" height="15" fill="rgb(233,36,39)" fg:x="11953" fg:w="129"/><text x="14.4412%" y="238.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:180) (1,789 samples, 2.12%)</title><rect x="12.8770%" y="212" width="2.1240%" height="15" fill="rgb(226,3,54)" fg:x="10846" fg:w="1789"/><text x="13.1270%" y="222.50">s..</text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:50) (553 samples, 0.66%)</title><rect x="14.3444%" y="228" width="0.6566%" height="15" fill="rgb(245,192,40)" fg:x="12082" fg:w="553"/><text x="14.5944%" y="238.50"></text></g><g><title>__init__ (minigrid/core/world_object.py:34) (277 samples, 0.33%)</title><rect x="18.7764%" y="260" width="0.3289%" height="15" fill="rgb(238,167,29)" fg:x="15815" fg:w="277"/><text x="19.0264%" y="270.50"></text></g><g><title>__init__ (minigrid/core/world_object.py:35) (176 samples, 0.21%)</title><rect x="19.1053%" y="260" width="0.2090%" height="15" fill="rgb(232,182,51)" fg:x="16092" fg:w="176"/><text x="19.3553%" y="270.50"></text></g><g><title>__init__ (minigrid/core/world_object.py:36) (375 samples, 0.45%)</title><rect x="19.3142%" y="260" width="0.4452%" height="15" fill="rgb(231,60,39)" fg:x="16268" fg:w="375"/><text x="19.5642%" y="270.50"></text></g><g><title>__init__ (minigrid/core/world_object.py:37) (169 samples, 0.20%)</title><rect x="19.7595%" y="260" width="0.2006%" height="15" fill="rgb(208,69,12)" fg:x="16643" fg:w="169"/><text x="20.0095%" y="270.50"></text></g><g><title>__init__ (minigrid/core/world_object.py:38) (175 samples, 0.21%)</title><rect x="19.9601%" y="260" width="0.2078%" height="15" fill="rgb(235,93,37)" fg:x="16812" fg:w="175"/><text x="20.2101%" y="270.50"></text></g><g><title>__init__ (minigrid/core/world_object.py:41) (191 samples, 0.23%)</title><rect x="20.1679%" y="260" width="0.2268%" height="15" fill="rgb(213,116,39)" fg:x="16987" fg:w="191"/><text x="20.4179%" y="270.50"></text></g><g><title>__init__ (MA_minigrid/MA_core/objects.py:33) (2,943 samples, 3.49%)</title><rect x="17.1416%" y="244" width="3.4941%" height="15" fill="rgb(222,207,29)" fg:x="14438" fg:w="2943"/><text x="17.3916%" y="254.50">__i..</text></g><g><title>__init__ (minigrid/core/world_object.py:44) (203 samples, 0.24%)</title><rect x="20.3946%" y="260" width="0.2410%" height="15" fill="rgb(206,96,30)" fg:x="17178" fg:w="203"/><text x="20.6446%" y="270.50"></text></g><g><title>__init__ (MA_minigrid/MA_core/objects.py:34) (197 samples, 0.23%)</title><rect x="20.6357%" y="244" width="0.2339%" height="15" fill="rgb(218,138,4)" fg:x="17381" fg:w="197"/><text x="20.8857%" y="254.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:182) (5,141 samples, 6.10%)</title><rect x="15.0009%" y="212" width="6.1037%" height="15" fill="rgb(250,191,14)" fg:x="12635" fg:w="5141"/><text x="15.2509%" y="222.50">slice (M..</text></g><g><title>__init__ (MA_minigrid/MA_core/objects.py:307) (4,497 samples, 5.34%)</title><rect x="15.7655%" y="228" width="5.3391%" height="15" fill="rgb(239,60,40)" fg:x="13279" fg:w="4497"/><text x="16.0155%" y="238.50">__init_..</text></g><g><title>__init__ (MA_minigrid/MA_core/objects.py:35) (198 samples, 0.24%)</title><rect x="20.8695%" y="244" width="0.2351%" height="15" fill="rgb(206,27,48)" fg:x="17578" fg:w="198"/><text x="21.1195%" y="254.50"></text></g><g><title>set (minigrid/core/grid.py:67) (567 samples, 0.67%)</title><rect x="22.0366%" y="228" width="0.6732%" height="15" fill="rgb(225,35,8)" fg:x="18561" fg:w="567"/><text x="22.2866%" y="238.50"></text></g><g><title>set (minigrid/core/grid.py:70) (396 samples, 0.47%)</title><rect x="22.7098%" y="228" width="0.4702%" height="15" fill="rgb(250,213,24)" fg:x="19128" fg:w="396"/><text x="22.9598%" y="238.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:185) (2,660 samples, 3.16%)</title><rect x="21.1592%" y="212" width="3.1581%" height="15" fill="rgb(247,123,22)" fg:x="17822" fg:w="2660"/><text x="21.4092%" y="222.50">sli..</text></g><g><title>set (minigrid/core/grid.py:72) (958 samples, 1.14%)</title><rect x="23.1799%" y="228" width="1.1374%" height="15" fill="rgb(231,138,38)" fg:x="19524" fg:w="958"/><text x="23.4299%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:28) (550 samples, 0.65%)</title><rect x="25.2671%" y="228" width="0.6530%" height="15" fill="rgb(231,145,46)" fg:x="21282" fg:w="550"/><text x="25.5171%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:31) (428 samples, 0.51%)</title><rect x="25.9201%" y="228" width="0.5081%" height="15" fill="rgb(251,118,11)" fg:x="21832" fg:w="428"/><text x="26.1701%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:33) (162 samples, 0.19%)</title><rect x="26.4283%" y="228" width="0.1923%" height="15" fill="rgb(217,147,25)" fg:x="22260" fg:w="162"/><text x="26.6783%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:34) (630 samples, 0.75%)</title><rect x="26.6206%" y="228" width="0.7480%" height="15" fill="rgb(247,81,37)" fg:x="22422" fg:w="630"/><text x="26.8706%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:36) (99 samples, 0.12%)</title><rect x="27.3994%" y="228" width="0.1175%" height="15" fill="rgb(209,12,38)" fg:x="23078" fg:w="99"/><text x="27.6494%" y="238.50"></text></g><g><title>slice (MA_minigrid/MA_core/MAgrid.py:186) (2,803 samples, 3.33%)</title><rect x="24.3173%" y="212" width="3.3279%" height="15" fill="rgb(227,1,9)" fg:x="20482" fg:w="2803"/><text x="24.5673%" y="222.50">sli..</text></g><g><title>gen_obs_grid (MA_minigrid/MA_core/MAminigrid.py:537) (17,924 samples, 21.28%)</title><rect x="6.3661%" y="196" width="21.2803%" height="15" fill="rgb(248,47,43)" fg:x="5362" fg:w="17924"/><text x="6.6161%" y="206.50">gen_obs_grid (MA_minigrid/MA_core/..</text></g><g><title>__init__ (MA_minigrid/MA_core/MAgrid.py:23) (147 samples, 0.17%)</title><rect x="28.2507%" y="228" width="0.1745%" height="15" fill="rgb(221,10,30)" fg:x="23795" fg:w="147"/><text x="28.5007%" y="238.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:195) (514 samples, 0.61%)</title><rect x="27.9824%" y="212" width="0.6102%" height="15" fill="rgb(210,229,1)" fg:x="23569" fg:w="514"/><text x="28.2324%" y="222.50"></text></g><g><title>__init__ (MA_minigrid/MA_core/MAgrid.py:24) (141 samples, 0.17%)</title><rect x="28.4252%" y="228" width="0.1674%" height="15" fill="rgb(222,148,37)" fg:x="23942" fg:w="141"/><text x="28.6752%" y="238.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:197) (127 samples, 0.15%)</title><rect x="28.5926%" y="212" width="0.1508%" height="15" fill="rgb(234,67,33)" fg:x="24083" fg:w="127"/><text x="28.8426%" y="222.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:198) (974 samples, 1.16%)</title><rect x="28.7434%" y="212" width="1.1564%" height="15" fill="rgb(247,98,35)" fg:x="24210" fg:w="974"/><text x="28.9934%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:75) (1,472 samples, 1.75%)</title><rect x="32.0843%" y="228" width="1.7476%" height="15" fill="rgb(247,138,52)" fg:x="27024" fg:w="1472"/><text x="32.3343%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:76) (1,245 samples, 1.48%)</title><rect x="33.8320%" y="228" width="1.4781%" height="15" fill="rgb(213,79,30)" fg:x="28496" fg:w="1245"/><text x="34.0820%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:77) (719 samples, 0.85%)</title><rect x="35.3101%" y="228" width="0.8536%" height="15" fill="rgb(246,177,23)" fg:x="29741" fg:w="719"/><text x="35.5601%" y="238.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:199) (7,198 samples, 8.55%)</title><rect x="29.8998%" y="212" width="8.5459%" height="15" fill="rgb(230,62,27)" fg:x="25184" fg:w="7198"/><text x="30.1498%" y="222.50">rotate_left ..</text></g><g><title>get (minigrid/core/grid.py:78) (1,922 samples, 2.28%)</title><rect x="36.1637%" y="228" width="2.2819%" height="15" fill="rgb(216,154,8)" fg:x="30460" fg:w="1922"/><text x="36.4137%" y="238.50">g..</text></g><g><title>set (minigrid/core/grid.py:67) (1,513 samples, 1.80%)</title><rect x="42.1891%" y="228" width="1.7963%" height="15" fill="rgb(244,35,45)" fg:x="35535" fg:w="1513"/><text x="42.4391%" y="238.50">s..</text></g><g><title>set (minigrid/core/grid.py:70) (1,239 samples, 1.47%)</title><rect x="43.9854%" y="228" width="1.4710%" height="15" fill="rgb(251,115,12)" fg:x="37048" fg:w="1239"/><text x="44.2354%" y="238.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:200) (8,311 samples, 9.87%)</title><rect x="38.4456%" y="212" width="9.8673%" height="15" fill="rgb(240,54,50)" fg:x="32382" fg:w="8311"/><text x="38.6956%" y="222.50">rotate_left (M..</text></g><g><title>set (minigrid/core/grid.py:72) (2,406 samples, 2.86%)</title><rect x="45.4564%" y="228" width="2.8565%" height="15" fill="rgb(233,84,52)" fg:x="38287" fg:w="2406"/><text x="45.7064%" y="238.50">se..</text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:44) (1,502 samples, 1.78%)</title><rect x="50.6245%" y="228" width="1.7833%" height="15" fill="rgb(207,117,47)" fg:x="42640" fg:w="1502"/><text x="50.8745%" y="238.50">g..</text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:47) (1,228 samples, 1.46%)</title><rect x="52.4078%" y="228" width="1.4579%" height="15" fill="rgb(249,43,39)" fg:x="44142" fg:w="1228"/><text x="52.6578%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:49) (754 samples, 0.90%)</title><rect x="53.8657%" y="228" width="0.8952%" height="15" fill="rgb(209,38,44)" fg:x="45370" fg:w="754"/><text x="54.1157%" y="238.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:201) (7,376 samples, 8.76%)</title><rect x="48.3129%" y="212" width="8.7572%" height="15" fill="rgb(236,212,23)" fg:x="40693" fg:w="7376"/><text x="48.5629%" y="222.50">rotate_left ..</text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:50) (1,945 samples, 2.31%)</title><rect x="54.7609%" y="228" width="2.3092%" height="15" fill="rgb(242,79,21)" fg:x="46124" fg:w="1945"/><text x="55.0109%" y="238.50">g..</text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:28) (1,526 samples, 1.81%)</title><rect x="61.1044%" y="228" width="1.8117%" height="15" fill="rgb(211,96,35)" fg:x="51467" fg:w="1526"/><text x="61.3544%" y="238.50">s..</text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:31) (1,217 samples, 1.44%)</title><rect x="62.9161%" y="228" width="1.4449%" height="15" fill="rgb(253,215,40)" fg:x="52993" fg:w="1217"/><text x="63.1661%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:33) (553 samples, 0.66%)</title><rect x="64.3610%" y="228" width="0.6566%" height="15" fill="rgb(211,81,21)" fg:x="54210" fg:w="553"/><text x="64.6110%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:34) (1,872 samples, 2.22%)</title><rect x="65.0176%" y="228" width="2.2225%" height="15" fill="rgb(208,190,38)" fg:x="54763" fg:w="1872"/><text x="65.2676%" y="238.50">s..</text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:35) (90 samples, 0.11%)</title><rect x="67.2401%" y="228" width="0.1069%" height="15" fill="rgb(235,213,38)" fg:x="56635" fg:w="90"/><text x="67.4901%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:36) (254 samples, 0.30%)</title><rect x="67.3470%" y="228" width="0.3016%" height="15" fill="rgb(237,122,38)" fg:x="56725" fg:w="254"/><text x="67.5970%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:38) (244 samples, 0.29%)</title><rect x="67.6485%" y="228" width="0.2897%" height="15" fill="rgb(244,218,35)" fg:x="56979" fg:w="244"/><text x="67.8985%" y="238.50"></text></g><g><title>rotate_left (MA_minigrid/MA_core/MAgrid.py:202) (9,220 samples, 10.95%)</title><rect x="57.0701%" y="212" width="10.9465%" height="15" fill="rgb(240,68,47)" fg:x="48069" fg:w="9220"/><text x="57.3201%" y="222.50">rotate_left (MA_..</text></g><g><title>gen_obs_grid (MA_minigrid/MA_core/MAminigrid.py:539) (33,940 samples, 40.30%)</title><rect x="27.7236%" y="196" width="40.2954%" height="15" fill="rgb(210,16,53)" fg:x="23351" fg:w="33940"/><text x="27.9736%" y="206.50">gen_obs_grid (MA_minigrid/MA_core/MAminigrid.py:539)</text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:237) (205 samples, 0.24%)</title><rect x="68.1151%" y="212" width="0.2434%" height="15" fill="rgb(235,124,12)" fg:x="57372" fg:w="205"/><text x="68.3651%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:239) (109 samples, 0.13%)</title><rect x="68.3585%" y="212" width="0.1294%" height="15" fill="rgb(224,169,11)" fg:x="57577" fg:w="109"/><text x="68.6085%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:241) (126 samples, 0.15%)</title><rect x="68.4879%" y="212" width="0.1496%" height="15" fill="rgb(250,166,2)" fg:x="57686" fg:w="126"/><text x="68.7379%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:242) (359 samples, 0.43%)</title><rect x="68.6375%" y="212" width="0.4262%" height="15" fill="rgb(242,216,29)" fg:x="57812" fg:w="359"/><text x="68.8875%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:243) (745 samples, 0.88%)</title><rect x="69.0637%" y="212" width="0.8845%" height="15" fill="rgb(230,116,27)" fg:x="58171" fg:w="745"/><text x="69.3137%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:75) (175 samples, 0.21%)</title><rect x="70.2213%" y="228" width="0.2078%" height="15" fill="rgb(228,99,48)" fg:x="59146" fg:w="175"/><text x="70.4713%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:76) (161 samples, 0.19%)</title><rect x="70.4291%" y="228" width="0.1911%" height="15" fill="rgb(253,11,6)" fg:x="59321" fg:w="161"/><text x="70.6791%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:246) (826 samples, 0.98%)</title><rect x="69.9554%" y="212" width="0.9807%" height="15" fill="rgb(247,143,39)" fg:x="58922" fg:w="826"/><text x="70.2054%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:78) (185 samples, 0.22%)</title><rect x="70.7164%" y="228" width="0.2196%" height="15" fill="rgb(236,97,10)" fg:x="59563" fg:w="185"/><text x="70.9664%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:247) (163 samples, 0.19%)</title><rect x="70.9360%" y="212" width="0.1935%" height="15" fill="rgb(233,208,19)" fg:x="59748" fg:w="163"/><text x="71.1860%" y="222.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:44) (111 samples, 0.13%)</title><rect x="71.3290%" y="228" width="0.1318%" height="15" fill="rgb(216,164,2)" fg:x="60079" fg:w="111"/><text x="71.5790%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:250) (531 samples, 0.63%)</title><rect x="71.1331%" y="212" width="0.6304%" height="15" fill="rgb(220,129,5)" fg:x="59914" fg:w="531"/><text x="71.3831%" y="222.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:50) (121 samples, 0.14%)</title><rect x="71.6199%" y="228" width="0.1437%" height="15" fill="rgb(242,17,10)" fg:x="60324" fg:w="121"/><text x="71.8699%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:254) (310 samples, 0.37%)</title><rect x="71.8526%" y="212" width="0.3680%" height="15" fill="rgb(242,107,0)" fg:x="60520" fg:w="310"/><text x="72.1026%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:256) (262 samples, 0.31%)</title><rect x="72.2907%" y="212" width="0.3111%" height="15" fill="rgb(251,28,31)" fg:x="60889" fg:w="262"/><text x="72.5407%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:257) (262 samples, 0.31%)</title><rect x="72.6017%" y="212" width="0.3111%" height="15" fill="rgb(233,223,10)" fg:x="61151" fg:w="262"/><text x="72.8517%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:259) (616 samples, 0.73%)</title><rect x="72.9128%" y="212" width="0.7313%" height="15" fill="rgb(215,21,27)" fg:x="61413" fg:w="616"/><text x="73.1628%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:260) (629 samples, 0.75%)</title><rect x="73.6442%" y="212" width="0.7468%" height="15" fill="rgb(232,23,21)" fg:x="62029" fg:w="629"/><text x="73.8942%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:75) (202 samples, 0.24%)</title><rect x="74.7649%" y="228" width="0.2398%" height="15" fill="rgb(244,5,23)" fg:x="62973" fg:w="202"/><text x="75.0149%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:76) (154 samples, 0.18%)</title><rect x="75.0047%" y="228" width="0.1828%" height="15" fill="rgb(226,81,46)" fg:x="63175" fg:w="154"/><text x="75.2547%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:77) (87 samples, 0.10%)</title><rect x="75.1876%" y="228" width="0.1033%" height="15" fill="rgb(247,70,30)" fg:x="63329" fg:w="87"/><text x="75.4376%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:263) (899 samples, 1.07%)</title><rect x="74.4717%" y="212" width="1.0673%" height="15" fill="rgb(212,68,19)" fg:x="62726" fg:w="899"/><text x="74.7217%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:78) (209 samples, 0.25%)</title><rect x="75.2909%" y="228" width="0.2481%" height="15" fill="rgb(240,187,13)" fg:x="63416" fg:w="209"/><text x="75.5409%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:264) (182 samples, 0.22%)</title><rect x="75.5390%" y="212" width="0.2161%" height="15" fill="rgb(223,113,26)" fg:x="63625" fg:w="182"/><text x="75.7890%" y="222.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:44) (135 samples, 0.16%)</title><rect x="75.9581%" y="228" width="0.1603%" height="15" fill="rgb(206,192,2)" fg:x="63978" fg:w="135"/><text x="76.2081%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:47) (96 samples, 0.11%)</title><rect x="76.1184%" y="228" width="0.1140%" height="15" fill="rgb(241,108,4)" fg:x="64113" fg:w="96"/><text x="76.3684%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:267) (613 samples, 0.73%)</title><rect x="75.7587%" y="212" width="0.7278%" height="15" fill="rgb(247,173,49)" fg:x="63810" fg:w="613"/><text x="76.0087%" y="222.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:50) (150 samples, 0.18%)</title><rect x="76.3084%" y="228" width="0.1781%" height="15" fill="rgb(224,114,35)" fg:x="64273" fg:w="150"/><text x="76.5584%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:271) (113 samples, 0.13%)</title><rect x="76.5838%" y="212" width="0.1342%" height="15" fill="rgb(245,159,27)" fg:x="64505" fg:w="113"/><text x="76.8338%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:272) (285 samples, 0.34%)</title><rect x="76.7180%" y="212" width="0.3384%" height="15" fill="rgb(245,172,44)" fg:x="64618" fg:w="285"/><text x="76.9680%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:273) (143 samples, 0.17%)</title><rect x="77.0563%" y="212" width="0.1698%" height="15" fill="rgb(236,23,11)" fg:x="64903" fg:w="143"/><text x="77.3063%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:274) (289 samples, 0.34%)</title><rect x="77.2261%" y="212" width="0.3431%" height="15" fill="rgb(205,117,38)" fg:x="65046" fg:w="289"/><text x="77.4761%" y="222.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:28) (353 samples, 0.42%)</title><rect x="78.0904%" y="228" width="0.4191%" height="15" fill="rgb(237,72,25)" fg:x="65774" fg:w="353"/><text x="78.3404%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:31) (219 samples, 0.26%)</title><rect x="78.5095%" y="228" width="0.2600%" height="15" fill="rgb(244,70,9)" fg:x="66127" fg:w="219"/><text x="78.7595%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:33) (113 samples, 0.13%)</title><rect x="78.7695%" y="228" width="0.1342%" height="15" fill="rgb(217,125,39)" fg:x="66346" fg:w="113"/><text x="79.0195%" y="238.50"></text></g><g><title>set_agent (MA_minigrid/MA_core/MAgrid.py:34) (365 samples, 0.43%)</title><rect x="78.9037%" y="228" width="0.4333%" height="15" fill="rgb(235,36,10)" fg:x="66459" fg:w="365"/><text x="79.1537%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:277) (1,464 samples, 1.74%)</title><rect x="77.6226%" y="212" width="1.7381%" height="15" fill="rgb(251,123,47)" fg:x="65380" fg:w="1464"/><text x="77.8726%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:278) (309 samples, 0.37%)</title><rect x="79.3608%" y="212" width="0.3669%" height="15" fill="rgb(221,13,13)" fg:x="66844" fg:w="309"/><text x="79.6108%" y="222.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:279) (840 samples, 1.00%)</title><rect x="79.7276%" y="212" width="0.9973%" height="15" fill="rgb(238,131,9)" fg:x="67153" fg:w="840"/><text x="79.9776%" y="222.50"></text></g><g><title>set (minigrid/core/grid.py:67) (288 samples, 0.34%)</title><rect x="81.2058%" y="228" width="0.3419%" height="15" fill="rgb(211,50,8)" fg:x="68398" fg:w="288"/><text x="81.4558%" y="238.50"></text></g><g><title>set (minigrid/core/grid.py:70) (237 samples, 0.28%)</title><rect x="81.5477%" y="228" width="0.2814%" height="15" fill="rgb(245,182,24)" fg:x="68686" fg:w="237"/><text x="81.7977%" y="238.50"></text></g><g><title>process_vis (MA_minigrid/MA_core/MAgrid.py:280) (1,713 samples, 2.03%)</title><rect x="80.7249%" y="212" width="2.0338%" height="15" fill="rgb(242,14,37)" fg:x="67993" fg:w="1713"/><text x="80.9749%" y="222.50">p..</text></g><g><title>set (minigrid/core/grid.py:72) (783 samples, 0.93%)</title><rect x="81.8291%" y="228" width="0.9296%" height="15" fill="rgb(246,228,12)" fg:x="68923" fg:w="783"/><text x="82.0791%" y="238.50"></text></g><g><title>gen_obs_grid (MA_minigrid/MA_core/MAminigrid.py:544) (12,438 samples, 14.77%)</title><rect x="68.0403%" y="196" width="14.7671%" height="15" fill="rgb(213,55,15)" fg:x="57309" fg:w="12438"/><text x="68.2903%" y="206.50">gen_obs_grid (MA_minigr..</text></g><g><title>gen_obs (MA_minigrid/MA_core/MAminigrid.py:560) (64,810 samples, 76.95%)</title><rect x="5.9375%" y="180" width="76.9459%" height="15" fill="rgb(209,9,3)" fg:x="5001" fg:w="64810"/><text x="6.1875%" y="190.50">gen_obs (MA_minigrid/MA_core/MAminigrid.py:560)</text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:144) (219 samples, 0.26%)</title><rect x="83.0959%" y="212" width="0.2600%" height="15" fill="rgb(230,59,30)" fg:x="69990" fg:w="219"/><text x="83.3459%" y="222.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:147) (379 samples, 0.45%)</title><rect x="83.4331%" y="212" width="0.4500%" height="15" fill="rgb(209,121,21)" fg:x="70274" fg:w="379"/><text x="83.6831%" y="222.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:148) (89 samples, 0.11%)</title><rect x="83.8830%" y="212" width="0.1057%" height="15" fill="rgb(220,109,13)" fg:x="70653" fg:w="89"/><text x="84.1330%" y="222.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:149) (985 samples, 1.17%)</title><rect x="83.9887%" y="212" width="1.1694%" height="15" fill="rgb(232,18,1)" fg:x="70742" fg:w="985"/><text x="84.2387%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:75) (234 samples, 0.28%)</title><rect x="85.5796%" y="228" width="0.2778%" height="15" fill="rgb(215,41,42)" fg:x="72082" fg:w="234"/><text x="85.8296%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:76) (184 samples, 0.22%)</title><rect x="85.8574%" y="228" width="0.2185%" height="15" fill="rgb(224,123,36)" fg:x="72316" fg:w="184"/><text x="86.1074%" y="238.50"></text></g><g><title>get (minigrid/core/grid.py:77) (123 samples, 0.15%)</title><rect x="86.0759%" y="228" width="0.1460%" height="15" fill="rgb(240,125,3)" fg:x="72500" fg:w="123"/><text x="86.3259%" y="238.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:150) (1,216 samples, 1.44%)</title><rect x="85.1581%" y="212" width="1.4437%" height="15" fill="rgb(205,98,50)" fg:x="71727" fg:w="1216"/><text x="85.4081%" y="222.50"></text></g><g><title>get (minigrid/core/grid.py:78) (320 samples, 0.38%)</title><rect x="86.2219%" y="228" width="0.3799%" height="15" fill="rgb(205,185,37)" fg:x="72623" fg:w="320"/><text x="86.4719%" y="238.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:152) (1,448 samples, 1.72%)</title><rect x="86.7016%" y="212" width="1.7191%" height="15" fill="rgb(238,207,15)" fg:x="73027" fg:w="1448"/><text x="86.9516%" y="222.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:154) (2,902 samples, 3.45%)</title><rect x="88.4207%" y="212" width="3.4454%" height="15" fill="rgb(213,199,42)" fg:x="74475" fg:w="2902"/><text x="88.6707%" y="222.50">enc..</text></g><g><title>encode (MA_minigrid/MA_core/objects.py:39) (289 samples, 0.34%)</title><rect x="91.5230%" y="228" width="0.3431%" height="15" fill="rgb(235,201,11)" fg:x="77088" fg:w="289"/><text x="91.7730%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:44) (282 samples, 0.33%)</title><rect x="92.2923%" y="228" width="0.3348%" height="15" fill="rgb(207,46,11)" fg:x="77736" fg:w="282"/><text x="92.5423%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:47) (162 samples, 0.19%)</title><rect x="92.6272%" y="228" width="0.1923%" height="15" fill="rgb(241,35,35)" fg:x="78018" fg:w="162"/><text x="92.8772%" y="238.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:49) (117 samples, 0.14%)</title><rect x="92.8195%" y="228" width="0.1389%" height="15" fill="rgb(243,32,47)" fg:x="78180" fg:w="117"/><text x="93.0695%" y="238.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:156) (1,232 samples, 1.46%)</title><rect x="91.8661%" y="212" width="1.4627%" height="15" fill="rgb(247,202,23)" fg:x="77377" fg:w="1232"/><text x="92.1161%" y="222.50"></text></g><g><title>get_agent (MA_minigrid/MA_core/MAgrid.py:50) (312 samples, 0.37%)</title><rect x="92.9584%" y="228" width="0.3704%" height="15" fill="rgb(219,102,11)" fg:x="78297" fg:w="312"/><text x="93.2084%" y="238.50"></text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:158) (2,169 samples, 2.58%)</title><rect x="93.4155%" y="212" width="2.5752%" height="15" fill="rgb(243,110,44)" fg:x="78682" fg:w="2169"/><text x="93.6655%" y="222.50">en..</text></g><g><title>encode (MA_minigrid/MA_core/MAgrid.py:160) (672 samples, 0.80%)</title><rect x="95.9906%" y="212" width="0.7978%" height="15" fill="rgb(222,74,54)" fg:x="80851" fg:w="672"/><text x="96.2406%" y="222.50"></text></g><g><title>gen_obs (MA_minigrid/MA_core/MAminigrid.py:564) (11,698 samples, 13.89%)</title><rect x="82.9083%" y="180" width="13.8885%" height="15" fill="rgb(216,99,12)" fg:x="69832" fg:w="11698"/><text x="83.1583%" y="190.50">gen_obs (MA_minigrid/..</text></g><g><title>&lt;listcomp&gt; (MA_minigrid/MA_core/MAminigrid.py:564) (11,621 samples, 13.80%)</title><rect x="82.9997%" y="196" width="13.7971%" height="15" fill="rgb(226,22,26)" fg:x="69909" fg:w="11621"/><text x="83.2497%" y="206.50">&lt;listcomp&gt; (MA_minigr..</text></g><g><title>&lt;listcomp&gt; (MA_minigrid/MA_core/MAminigrid.py:565) (115 samples, 0.14%)</title><rect x="96.8372%" y="196" width="0.1365%" height="15" fill="rgb(217,163,10)" fg:x="81564" fg:w="115"/><text x="97.0872%" y="206.50"></text></g><g><title>gen_obs (MA_minigrid/MA_core/MAminigrid.py:565) (150 samples, 0.18%)</title><rect x="96.7968%" y="180" width="0.1781%" height="15" fill="rgb(213,25,53)" fg:x="81530" fg:w="150"/><text x="97.0468%" y="190.50"></text></g><g><title>step (MA_minigrid/envs/MAbabyai/core/MAroomgrid_level.py:76) (78,803 samples, 93.56%)</title><rect x="3.4454%" y="148" width="93.5591%" height="15" fill="rgb(252,105,26)" fg:x="2902" fg:w="78803"/><text x="3.6954%" y="158.50">step (MA_minigrid/envs/MAbabyai/core/MAroomgrid_level.py:76)</text></g><g><title>step (MA_minigrid/MA_core/MAminigrid.py:520) (76,806 samples, 91.19%)</title><rect x="5.8164%" y="164" width="91.1882%" height="15" fill="rgb(220,39,43)" fg:x="4899" fg:w="76806"/><text x="6.0664%" y="174.50">step (MA_minigrid/MA_core/MAminigrid.py:520)</text></g><g><title>__getattr__ (enum.py:432) (99 samples, 0.12%)</title><rect x="97.3417%" y="164" width="0.1175%" height="15" fill="rgb(229,68,48)" fg:x="81989" fg:w="99"/><text x="97.5917%" y="174.50"></text></g><g><title>step (MA_minigrid/envs/MAbabyai/core/MAroomgrid_level.py:80) (395 samples, 0.47%)</title><rect x="97.0283%" y="148" width="0.4690%" height="15" fill="rgb(252,8,32)" fg:x="81725" fg:w="395"/><text x="97.2783%" y="158.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2511) (86 samples, 0.10%)</title><rect x="98.4708%" y="244" width="0.1021%" height="15" fill="rgb(223,20,43)" fg:x="82940" fg:w="86"/><text x="98.7208%" y="254.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2526) (127 samples, 0.15%)</title><rect x="98.6774%" y="244" width="0.1508%" height="15" fill="rgb(229,81,49)" fg:x="83114" fg:w="127"/><text x="98.9274%" y="254.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2527) (117 samples, 0.14%)</title><rect x="98.8282%" y="244" width="0.1389%" height="15" fill="rgb(236,28,36)" fg:x="83241" fg:w="117"/><text x="99.0782%" y="254.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (549 samples, 0.65%)</title><rect x="98.3188%" y="228" width="0.6518%" height="15" fill="rgb(249,185,26)" fg:x="82812" fg:w="549"/><text x="98.5688%" y="238.50"></text></g><g><title>verify_action (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:459) (938 samples, 1.11%)</title><rect x="97.8594%" y="212" width="1.1136%" height="15" fill="rgb(249,174,33)" fg:x="82425" fg:w="938"/><text x="98.1094%" y="222.50"></text></g><g><title>verify (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:378) (1,000 samples, 1.19%)</title><rect x="97.7870%" y="180" width="1.1873%" height="15" fill="rgb(233,201,37)" fg:x="82364" fg:w="1000"/><text x="98.0370%" y="190.50"></text></g><g><title>verify (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:325) (973 samples, 1.16%)</title><rect x="97.8190%" y="196" width="1.1552%" height="15" fill="rgb(221,78,26)" fg:x="82391" fg:w="973"/><text x="98.0690%" y="206.50"></text></g><g><title>array_equal (numpy/core/numeric.py:2457) (110 samples, 0.13%)</title><rect x="99.1084%" y="244" width="0.1306%" height="15" fill="rgb(250,127,30)" fg:x="83477" fg:w="110"/><text x="99.3584%" y="254.50"></text></g><g><title>array_equal (&lt;__array_function__ internals&gt;:180) (612 samples, 0.73%)</title><rect x="99.0775%" y="228" width="0.7266%" height="15" fill="rgb(230,49,44)" fg:x="83451" fg:w="612"/><text x="99.3275%" y="238.50"></text></g><g><title>array_equal (numpy/core/numeric.py:2463) (440 samples, 0.52%)</title><rect x="99.2817%" y="244" width="0.5224%" height="15" fill="rgb(229,67,23)" fg:x="83623" fg:w="440"/><text x="99.5317%" y="254.50"></text></g><g><title>_all (numpy/core/_methods.py:63) (300 samples, 0.36%)</title><rect x="99.4479%" y="260" width="0.3562%" height="15" fill="rgb(249,83,47)" fg:x="83763" fg:w="300"/><text x="99.6979%" y="270.50"></text></g><g><title>verify_action (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:482) (656 samples, 0.78%)</title><rect x="99.0276%" y="212" width="0.7788%" height="15" fill="rgb(215,43,3)" fg:x="83409" fg:w="656"/><text x="99.2776%" y="222.50"></text></g><g><title>verify (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:381) (700 samples, 0.83%)</title><rect x="98.9801%" y="180" width="0.8311%" height="15" fill="rgb(238,154,13)" fg:x="83369" fg:w="700"/><text x="99.2301%" y="190.50"></text></g><g><title>verify (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:325) (687 samples, 0.82%)</title><rect x="98.9956%" y="196" width="0.8156%" height="15" fill="rgb(219,56,2)" fg:x="83382" fg:w="687"/><text x="99.2456%" y="206.50"></text></g><g><title>verify (MA_minigrid/envs/MAbabyai/core/MA_verifier.py:55) (1,765 samples, 2.10%)</title><rect x="97.7418%" y="164" width="2.0955%" height="15" fill="rgb(233,0,4)" fg:x="82326" fg:w="1765"/><text x="97.9918%" y="174.50">v..</text></g><g><title>step (MA_minigrid/envs/MAbabyai/core/MAroomgrid_level.py:85) (1,914 samples, 2.27%)</title><rect x="97.5744%" y="148" width="2.2724%" height="15" fill="rgb(235,30,7)" fg:x="82185" fg:w="1914"/><text x="97.8244%" y="158.50">s..</text></g><g><title>step (MA_minigrid/envs/Danger_agent.py:92) (82,041 samples, 97.40%)</title><rect x="2.5799%" y="132" width="97.4035%" height="15" fill="rgb(250,79,13)" fg:x="2173" fg:w="82041"/><text x="2.8299%" y="142.50">step (MA_minigrid/envs/Danger_agent.py:92)</text></g><g><title>all (84,228 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(211,146,34)" fg:x="0" fg:w="84228"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test.py:40) (84,213 samples, 99.98%)</title><rect x="0.0178%" y="68" width="99.9822%" height="15" fill="rgb(228,22,38)" fg:x="15" fg:w="84213"/><text x="0.2678%" y="78.50">&lt;module&gt; (test.py:40)</text></g><g><title>main (test.py:36) (83,457 samples, 99.08%)</title><rect x="0.9154%" y="84" width="99.0846%" height="15" fill="rgb(235,168,5)" fg:x="771" fg:w="83457"/><text x="1.1654%" y="94.50">main (test.py:36)</text></g><g><title>step (gymnasium/wrappers/order_enforcing.py:56) (83,349 samples, 98.96%)</title><rect x="1.0436%" y="100" width="98.9564%" height="15" fill="rgb(221,155,16)" fg:x="879" fg:w="83349"/><text x="1.2936%" y="110.50">step (gymnasium/wrappers/order_enforcing.py:56)</text></g><g><title>step (gymnasium/wrappers/env_checker.py:49) (83,308 samples, 98.91%)</title><rect x="1.0923%" y="116" width="98.9077%" height="15" fill="rgb(215,215,53)" fg:x="920" fg:w="83308"/><text x="1.3423%" y="126.50">step (gymnasium/wrappers/env_checker.py:49)</text></g></svg></svg>